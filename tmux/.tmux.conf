# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on
# set -g automatic-rename off

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

set -as terminal-features ",*:RGB"
# set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# For Delta
set -ga terminal-overrides ",*-256color:Tc"

#--------------------------------------------------------------------------
# Status line (palette-based, follows terminal theme)
#--------------------------------------------------------------------------

# Active window title colors (e.g. background = blue, foreground = black)
set-window-option -g window-status-current-style bg=colour4,fg=colour0

# Status line customization
set -g status on
set -g status-style fg=colour7,bg=default
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# status-left (e.g. session name)
set -g status-left "  #[fg=colour15,bold]#S #[fg=colour7,nobold] "

# status-right (date/time/host)
set -g status-right " #[fg=colour7]%Y-%m-%d | %H:%M #[fg=colour15,bold]#h "

# Window status (inactive)
set -g window-status-format " #[fg=colour7] #I: #W "

# Window status (active)
set -g window-status-current-format " #[fg=colour0,bg=colour4]#I: #W "

set -g window-status-separator ""

# Pane borders
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour4

# Message style (e.g. prompts)
set -g message-style bg=colour0,fg=colour15

# Clock mode
set -g clock-mode-colour colour4

# Bell notification style
set -g window-status-bell-style bg=colour1,fg=colour0

# clock (redundant but included for fallback)
set-window-option -g clock-mode-colour colour4
set-window-option -g window-status-bell-style bg=colour1,fg=colour0

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# vim: set ft=tmux tw=0 nowrap:

# switch between two most recently used sessions
bind b switch-client -l

# show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# resize panes more easily
bind H resize-pane -L 5
bind L resize-pane -R 5
bind J resize-pane -D 5
bind K resize-pane -U 5

# Set prefix to C-a
set -g prefix C-e
unbind C-b
bind-key C-e send-prefix

# Send prefix to a nested tmux session by doubling the prefix
bind C-e send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Mouse mode (usefull for scrolling & resize)
set-option -g mouse on

# Open new windows and panes in the same directory
bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Move tmux status bar to top
bind-key C-k run-shell "tmux set-option -g status-position top;"
# Move tmux status bar to bottom
bind-key C-j run-shell "tmux set-option -g status-position bottom;"

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

#--------------------------------------------------------------------------
# Display Popups
#--------------------------------------------------------------------------

# LazyGit
bind g display-popup \
  -d "#{pane_current_path}" \
  -w 95% \
  -h 95% \
  -E "lazygit"
bind C-g display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "lazygit"
# Merlion
bind C-m display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "merlion"
bind-key m new-window -n "Merlion" -c "#{pane_current_path}" "~/.config/scripts/tmux-merlion.sh"
# Session switch
bind C-n display-popup -E 'bash -i -c "read -p \"Session name: \" name; tmux new-session -d -s \$name && tmux switch-client -t \$name"'
bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# File manager
bind C-y display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "yazi"
# Shell
bind C-t display-popup \
  -d "#{pane_current_path}" \
  -w 75% \
  -h 75% \
  -E "zsh"
bind-key C-c display-popup \
  -w 50% \
  -h 50% \
  -E "bash ~/.config/scripts/fzf_tmux_dirs.sh"

#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator' # for navigating panes and vim/nvim with Ctrl-hjkl
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
